repos:
  # The following hooks are executed in order every time a commit is being made. If any one of them reports an
  # error, then the commit fails and you need to retry the commit after fixing the reported error(s).
  - repo: https://github.com/pre-commit/pre-commit-hooks
    # Reference: https://gdevops.gitlab.io/tuto_git/tools/pre-commit/pre-commit.html#introduction
    rev: v4.0.1
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: pretty-format-json
        args: [ "--autofix", "--indent=4", "--no-sort-keys" ]
  - repo: https://github.com/pryorda/dockerfilelint-precommit-hooks
    rev: v0.1.0
    hooks:
      - id: dockerfilelint
        stages: [ commit ]
  - repo: https://github.com/haizaar/check-pipfile-lock
    rev: v0.0.5
    hooks:
      - id: check-pipfile-lock
    # Checks if Pipfile.lock is consistent with Pipfile. This check is skipped if Pipfile has not been modified.
  - repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v2.0.0
    hooks:
      - id: autopep8
    # Automatically formats Python code to conform to the PEP 8 style guide. If changes are made by the hook, the
    # commit fails and it needs to be retried after adding the modified files to the git staging area.
  - repo: https://github.com/PyCQA/flake8
    rev: 5.0.4
    hooks:
      - id: flake8
        additional_dependencies: ['flake8-annotations==2.9.1', 'flake8-quotes==3.3.1']
        language_version: python3.9
    # Checks code base against coding style (PEP8) and programming errors (like “library imported but unused” and
    # “Undefined name”).
  - repo: https://github.com/pycqa/isort
    rev: 5.11.5
    hooks:
      - id: isort
default_language_version:
  python: python3
